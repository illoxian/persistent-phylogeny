
{
	// Place your persistent workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"InfoLog": {
		"prefix": "info",
		"body": [
			"if (logging::enabled) std::cout<< \"[INFO] $0 \" << std::endl;"
		],
		"description": "If logging enabled prints an info message"
	},

	"Todo": {
		"prefix": "todo",
		"body": [
			"if (logging::enabled) std::cout<< \"[TODO] $0 \" << std::endl;"
		],
		"description": "If logging enabled prints TODOs"
	},


	"Warning": {
		"prefix": "warn",
		"body": [
			"if (logging::enabled) std::cout<< \"[WARNING] $0 \" << std::endl;"
		],
		"description": "If logging enabled prints WARNING message"
	},
	"Logic": {
		"prefix": "logic",
		"body": [
			"if (logging::enabled) std::cout<< \"[LOGIC] $0 \" << std::endl;"
		],
		"description": "If logging enabled prints LOGIC message"
	},

	"GeneralSwitch": {
		"prefix": "gen",
		"body": [
			"if (general::enabled) {",
			"\t$0",
			"}"
		],
		"description": "If logging enabled prints LOGIC message"
	},
}

	
	

